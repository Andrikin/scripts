#!/usr/bin/env bash

# Script para tirar screenshot da tela

snore() {
    read -rt "$1" <> <(true) || true
}

notify_sucess(){
	if [[ $? ]]
	then
		notify-send -t 7000 "SCREENSHOT" "Concluído com Sucesso!"
	else
		notify-send -u critical -t 7000 "SCREENSHOT" "Erro: Comando resultou em falha!"
	fi
}

copy_to_clipboard(){
	xclip -selection clipboard -target image/png -i "$IMAGEM"
}

#scrot -q 100 "$HOME/Imagens/screenshot/$IMAGEM"
#import -window root "$HOME/Imagens/screenshot/$IMAGEM"
full_screen(){
	snore 1
	xscreenshot | ff2png > "$IMAGEM" && copy_to_clipboard
	notify_sucess
}

# Envia imagem gerada pelo scrot para clipboard do sistema (facilita uso rápido em chats)
grab_screen(){
	# import "$HOME/Imagens/screenshot/$IMAGEM"
	scrot -s -q 100 "$IMAGEM" && copy_to_clipboard
	notify_sucess
}

choosing_option(){
	local option=$(printf "%s\n" "Escolha uma das opções:" "[1] Tela inteira" "[2] Tela selecionada" | dmenu -i -f -l 3 -fn "Source Code Pro Medium:size=14")
	case "${option:1:1}" in
		1)
			full_screen
			;;
		2)
			grab_screen
			;;
		*)
			notify-send -u critical -t 7000 "SCREENSHOT" "Erro: Comando inválido!"
	esac
}

remove_bell(){
	xset b off
}

verify_dir(){
	DIR="$HOME/images/screenshot"
	if [[ ! -d $DIR ]]
	then
		mkdir "$DIR"
	fi
}

main(){
	remove_bell
	verify_dir
	IMAGEM="$DIR/screeenshot-$(printf "%(%d-%b %H:%M:%S)T\\n").png"
	case "$1" in
		("grab")
			grab_screen;;
		(*)
			choosing_option;;
	esac
}

main "$@"
